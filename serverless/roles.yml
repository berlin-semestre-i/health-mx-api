AppSyncLambdaServiceRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:custom.projectPrefix}-AppSyncRole
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - appsync.amazonaws.com
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
    Policies:
      - PolicyName: ${self:custom.projectPrefix}-AppSyncRole-Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - lambda:invokeFunction
              Resource:
                - arn:aws:lambda:${self:provider.region}:${env:ACCOUNT_ID}:function:${self:functions.GraphqlHandler.name}
                - arn:aws:lambda:${self:provider.region}:${env:ACCOUNT_ID}:function:${self:functions.GraphqlHandler.name}:*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:FilterLogEvents
              Resource:
                - arn:aws:logs:*
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
                - dynamodb:GetItem
                - dynamodb:UpdateItem
                - dynamodb:PutItem
                - dynamodb:Scan
                - dynamodb:Query
              Resource:
                - arn:aws:dynamodb:${self:provider.region}:${env:ACCOUNT_ID}:table/${self:provider.environment.DYNAMODB}.Role
                - arn:aws:dynamodb:${self:provider.region}:${env:ACCOUNT_ID}:table/${self:provider.environment.DYNAMODB}.User

DeployedVersionServiceRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:custom.projectPrefix}-DeployedVersionRole
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
    Policies:
      - PolicyName: ${self:custom.projectPrefix}-DeployedVersionRole-Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - lambda:invokeFunction
              Resource:
                - arn:aws:lambda:${self:provider.region}:${env:ACCOUNT_ID}:function:${self:functions.DeployedVersion.name}
                - arn:aws:lambda:${self:provider.region}:${env:ACCOUNT_ID}:function:${self:functions.DeployedVersion.name}:*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:FilterLogEvents
              Resource:
                - arn:aws:logs:*
