service:
  name: Health-MX-API
  publish: false

package:
  exclude: ${file(./serverless/excludeFiles.yml)}

plugins:
  - serverless-appsync-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${self:provider.environment.STAGE}
  region: ${self:provider.environment.REGION}
  memorySize: 512 # in MB
  timeout: 120 # in seconds
  environment: ${file(./serverless/env.yml):environment}

functions:
  GraphqlHandler: ${file(./serverless/functions.yml):GraphqlHandler}
  DeployedVersion: ${file(./serverless/functions.yml):DeployedVersion}

resources:
  Resources:
    AppSyncLambdaServiceRole: ${file(./serverless/roles.yml):AppSyncLambdaServiceRole}
    DeployedVersionServiceRole: ${file(./serverless/roles.yml):DeployedVersionServiceRole}
    SNSRole: ${file(./serverless/roles.yml):SNSRole}
    UserPool: ${file(./serverless/resources.yml):UserPool}
    UserPoolClient: ${file(./serverless/resources.yml):UserPoolClient}
    RDSSecurityGroup: ${file(./serverless/resources.yml):RDSSecurityGroup}
    RDSInstance: ${file(./serverless/resources.yml):RDSInstance}
    RoleTable: ${file(./serverless/tables.yml):RoleTable}
    UserTable: ${file(./serverless/tables.yml):UserTable}
    SessionTable: ${file(./serverless/tables.yml):SessionTable}

custom:
  projectPrefix: ${self:provider.stage}-${self:service}
  accountId: ${self:provider.environment.ACCOUNT_ID}
  appSync:
    name: ${self:custom.projectPrefix}
    apiKey: ${self:provider.environment.API_KEY}
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: ${self:provider.region}
      defaultAction: ALLOW
      userPoolId:
        Ref: UserPoolClient
    mappingTemplatesLocation: app/mapping-templates
    mappingTemplates: ${file(./serverless/mapping.autogen.yml)}
    schema: app/global.schema.autogen.graphql
    serviceRole: AppSyncLambdaServiceRole
    dataSources: ${file(./serverless/appSyncDataSources.yml):dataSources}